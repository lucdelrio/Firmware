OSEK OSEK {

   OS ExampleOS {
      STATUS = EXTENDED;
      ERRORHOOK = TRUE;
      PRETASKHOOK = FALSE;
      POSTTASKHOOK = FALSE;
      STARTUPHOOK = FALSE;
      SHUTDOWNHOOK = FALSE;
      USERESSCHEDULER = FALSE;
      MEMMAP = FALSE;
   };

   RESOURCE = POSIXR;
   EVENT = POSIXE;
   APPMODE = AppMode1;

   TASK InitTask {
      PRIORITY = 1;
      ACTIVATION = 1;
      AUTOSTART = TRUE {
         APPMODE = AppMode1;
      }
      STACK = 512;
      TYPE = EXTENDED;
      SCHEDULE = NON;
      RESOURCE = POSIXR;
      EVENT = POSIXE;
   }
   
   TASK Task1 {
      PRIORITY = 10;
      ACTIVATION = 1;
      STACK = 512;
      SCHEDULE = NON;
      TYPE = EXTENDED;
      RESOURCE = POSIXR;
      EVENT = POSIXE;
   }

   TASK Task2 {
      PRIORITY = 8;
      ACTIVATION = 1;
      STACK = 512;
      SCHEDULE = NON;
      TYPE = EXTENDED;
      RESOURCE = POSIXR;
      EVENT = POSIXE;
   }
   
    TASK Task3 {
      PRIORITY = 6;
      ACTIVATION = 1;
      STACK = 512;
      SCHEDULE = NON;
      TYPE = EXTENDED;
      RESOURCE = POSIXR;
      EVENT = POSIXE;
   }
      
   TASK Task4 {
      PRIORITY = 8;
      ACTIVATION = 1;
      STACK = 512;
      TYPE = EXTENDED;
      SCHEDULE = NON;
      RESOURCE = POSIXR;
      EVENT = POSIXE;
   }
   
    TASK PeriodicTask5 {
      PRIORITY = 2;
      ACTIVATION = 1;
      STACK = 512;
      TYPE = EXTENDED;
      SCHEDULE = FULL;
      RESOURCE = POSIXR;
      EVENT = POSIXE;
   }
   
   TASK SwitchesTask {
       PRIORITY = 4;
   	   ACTIVATION = 1;
   	   STACK = 512;
   	   TYPE = EXTENDED;
   	   SCHEDULE = NON;
   	   RESOURCE = POSIXR;
   	   EVENT = POSIXE;
   }
   
   ALARM ActivateTask1 {
      COUNTER = HardwareCounter;
      ACTION = ACTIVATETASK {
         TASK = Task1;
      }
   }

   ALARM ActivateTask2 {
      COUNTER = HardwareCounter;
      ACTION = ACTIVATETASK {
         TASK = Task2;
      }
   }
   
   ALARM ActivateTask3 {
      COUNTER = HardwareCounter;
      ACTION = ACTIVATETASK {
         TASK = Task3;
      }
   }

   ALARM ActivatePeriodicTask5 {
      COUNTER = HardwareCounter;
      ACTION = ACTIVATETASK {
         TASK = PeriodicTask5;
      }
   }
   
	ALARM ActivateSwitchesTask {
       COUNTER = HardwareCounter;
       ACTION = ACTIVATETASK {
           TASK = SwitchesTask;
       }
   }
    
   COUNTER HardwareCounter {
      MAXALLOWEDVALUE = 1000;
      TICKSPERBASE = 1;
      MINCYCLE = 1;
      TYPE = HARDWARE;
      COUNTER = HWCOUNTER0;
   };

};
